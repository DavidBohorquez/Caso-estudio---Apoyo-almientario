 ----------------------------------------------------
--Generated by Enterprise Architect Version 15.0
--Created On : 24-nov.-2020 10:39:11 p. m.
--DBMS : Oracle
 ----------------------------------------------------
-- Drop Tables


begin
	EXECUTE IMMEDIATE 'DROP TABLE  Actividad  CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  Beneficio  CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  Beneficio_Actividad  CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  Categoria  CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  Condicion  CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  Convocatoria  CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  Coordinador  CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  Coordinador_Convocatoria  CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  Estudiante  CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  Funcionario  CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  Funcionario_Solicitud  CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  Pago  CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  Solicitud  CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  Solicitud_Soporte  CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  Soporte  CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  Subsidio  CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  Tipo_Subsidio  CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  Tiquete  CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE  Tiquetera  CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;
/

begin
	EXECUTE IMMEDIATE 'DROP ROLE R_CONSULTA CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;
/

begin
	EXECUTE IMMEDIATE 'DROP ROLE R_ESTUDIANTE CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;
/

begin
	EXECUTE IMMEDIATE 'DROP ROLE R_COORDINADOR CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;
/

begin
	EXECUTE IMMEDIATE 'DROP ROLE R_FUNCIONARIO CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;
/

begin
	EXECUTE IMMEDIATE 'DROP ROLE R_BENEFICIARIO CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;
/

begin
	EXECUTE IMMEDIATE 'DROP ROLE R_APP CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;
/

begin
	EXECUTE IMMEDIATE 'DROP ROLE R_ADMIN CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;
/

-- Create Tables

CREATE TABLE Actividad
(
	 K_ID  VARCHAR2(10) NOT NULL,	-- Código que identifica la Actividad
	 F_REALIZACION  DATE NOT NULL,	-- Fecha en que se realiza la actividad
	 O_LUGAR  VARCHAR2(30) NOT NULL,	-- Lugar donde se realiza la actividad
	 O_DESCRIPCION  VARCHAR2(70) NOT NULL,	-- Breve descripción de la actividad a realizar
	 ID_FUNCIONARIO  VARCHAR2(10) NOT NULL	-- Código del Funcionario que controla la Actividad
)
;

CREATE TABLE Beneficio
(
	 K_ID  VARCHAR2(10) NOT NULL,	-- Código identificador del beneficio entregado
	 I_ESTADO  VARCHAR2(50) NOT NULL,	-- Estado actual del beneficio (Entregado  E , Retidado  R , Cancelado  C ).
	 O_OBSERVACION  VARCHAR2(50) NULL,	-- Observación referente al estado del beneficio
	 ID_TIPO_SUBSIDIO  VARCHAR2(10) NOT NULL,	-- Código que identifica al subsidio asociado
	 ID_SOLICITUD VARCHAR2(10) NOT NULL -- Código que identifica la solicitud asociada al beneficio
)
;

CREATE TABLE Beneficio_Actividad
(
	 ID_BENEFICIO  VARCHAR2(10) NOT NULL,	-- Código que identifica al beneficio
	 ID_ACTIVIDAD  VARCHAR2(10) NOT NULL	-- Código qque identifica la Actividad a realizar
)
;

CREATE TABLE Categoria
(
	 K_ID  VARCHAR2(10) NOT NULL,
	 O_DESCRIPCION  VARCHAR2(250) NOT NULL,	-- Descripcion de la  CATEGORIA (Nombre de la  CATEGORIA) definida por la convocatoria para el apoyo alimentario
	 ID_CONVOCATORIA  VARCHAR2(10) NOT NULL	-- Foreing key de la convocatoria
)
;

CREATE TABLE Condicion
(
	 K_CONSECUTIVO  NUMBER(2) NOT NULL,	-- Número consecutivo para una condición de la categoria.
	 K_ID_CATEGORIA  VARCHAR2(50) NOT NULL,	-- Id de la  CATEGORIA como parte de la llave primaria.
	 O_DESCRIPCION  VARCHAR2(255) NOT NULL,	-- descripción de la condición actual
	 Q_PUNTAJE  NUMBER(3) NOT NULL	-- Puntaje asignado para la condición (Q_PUNTAJE >0 and Q_PUNTAJE <=100)
)
;

CREATE TABLE Convocatoria
(
	 K_ID_CONVOCATORIA  VARCHAR2(5) NOT NULL,	-- Id de la convocatoria
	 F_INICIO  DATE NOT NULL,	-- Fecha de apertura para la recepción de solicitudes al apoyo alimentario
	 F_RECEPCION_SOL  DATE NOT NULL,	-- Fecha final para la recepción de solicitudes
	 F_EVALUACION_SOL  DATE NOT NULL,	-- Fecha de inicio para la evaluación de las solicitudes recibidas
	 F_CIERRE  DATE NOT NULL,	-- Fecha de cierre de la convocatoria para el apoyo alimentario
	 I_ESTADO  VARCHAR2(1) NOT NULL,	-- Estado actual de la convocatoria ('R','E','F')
	 Q_PERIODO  NUMBER(1) NOT NULL,	-- Periodo de la convocatoria (1,3)
	 Q_ANIO  NUMBER(4) NOT NULL	-- Año de la convocatoria (anio>0 and anio<sysdate)
)
;

CREATE TABLE Coordinador
(
	 K_TIPO_ID  VARCHAR2(2) NOT NULL,	-- Tipo de cocumento ('CC','CE','PS')
	 K_ID  VARCHAR2(15) NOT NULL,	-- Identificación del coordinador a cargo
	 N_NOMBRES  VARCHAR2(30) NOT NULL,	-- Primer y segundo nombre del coordinador
	 N_APELLIDOS  VARCHAR2(30) NOT NULL,	-- Primer y segundo apellido del coordinador
	 N_CARGO  VARCHAR2(20) NOT NULL	-- Cargo del funcionario que ejerce como coordinador
)
;

CREATE TABLE Coordinador_Convocatoria
(
	 K_TIPO_ID_COORDINADOR  VARCHAR2(2) NOT NULL,	-- Tipo id del coordinador asociado
	 K_ID_COORDINADOR  VARCHAR2(15) NOT NULL,	-- Id coordinador asociado
	 K_ID_CONVOCATORIA  VARCHAR2(5) NOT NULL	-- Id de la convocatoria para el apoyo alimentario
)
;

CREATE TABLE Estudiante
(
	 K_CODIGO  VARCHAR2(11) NOT NULL,
	 N_NOMBRE  VARCHAR2(30) NOT NULL,
	 Q_RENOVACIONES  NUMBER(2) NOT NULL,
	 Q_CREDITOS_INS  NUMBER(2) NOT NULL,
	 I_PERIODO_ACT  NUMBER(1) NOT NULL
)
;

CREATE TABLE Funcionario
(
	 K_ID  VARCHAR2(10) NOT NULL,	-- Código que identifica al funcionario de Bienestar Institucional
	 N_NOMBRE  VARCHAR2(30) NOT NULL,	-- Nombres del Funcionario
	 N_APELLIDO  VARCHAR2(30) NOT NULL,	-- Apellidos del Funcionario
	 N_CARGO  VARCHAR2(20) NOT NULL	-- Cargo que ejerce el Funcionario
)
;

CREATE TABLE Funcionario_Solicitud
(
	 ID_FUNCIONARIO  VARCHAR2(10) NOT NULL,	-- Código del funcionario que gestiona la solicitud
	 ID_SOLICITUD  VARCHAR2(10) NOT NULL,	-- Código de la solicitud
	 F_ACTUALIZACION  DATE NOT NULL,	-- Fecha en que se actualiza la solicitud
	 O_OBSERVACION  VARCHAR2(30) NOT NULL	-- Breve desctipción por el cual se actualiza la solicitud
)
;

CREATE TABLE Pago
(
	 K_ID  VARCHAR2(10) NOT NULL,	-- Código del pago
	 F_PAGO  DATE NOT NULL,	-- Fecha en que se hace el pago
	 V_PAGO  NUMBER(8) NOT NULL,	-- valor que se paga
	 ID_TIQUETERA  VARCHAR2(10) NOT NULL	-- código de la tiquetera
)
;

CREATE TABLE Solicitud
(
	 K_ID  VARCHAR2(10) NOT NULL,	-- Código que identifica a la Solicitud
	 F_REALIZACION  DATE NOT NULL,	-- Fecha en que se realiza la Solicitud
	 I_ESTADO  VARCHAR2(2) NOT NULL,	-- Estado actual de la solicitud (Enviada  E , Rechazada  R ).
	 O_OBSERVACION  VARCHAR2(20),	-- Breve descripción del estado actual de la solicitud
	 ID_CONVOCATORIA  VARCHAR2(10) NOT NULL,	-- Código de la convocatoria asociada
	 K_ID_ESTUDIANTE  VARCHAR2(11) NOT NULL, --
	 Q_PUNTAJE NUMBER(3)
)
;

CREATE TABLE Solicitud_Soporte
(
	 ID_SOLICITUD  VARCHAR2(10) NOT NULL,	-- código de la solicitud
	 ID_SOPORTE  VARCHAR2(10) NOT NULL	-- código del soporte
)
;

CREATE TABLE Soporte
(
	 K_ID  VARCHAR2(10) NOT NULL,	-- código de identificación del soporte
	 O_DESCRIPCION  VARCHAR2(50) NOT NULL,	-- Descripción del estado (razones) del soporte de la  CATEGORIA definida para el apoyo alimentario.
	 I_TIPO  VARCHAR2(10) NOT NULL,	-- Tipo de la extensión del documento que se adjunta para la  CATEGORIA del apoyo alimentario.
	 I_ESTADO  VARCHAR2(4) NULL,	-- Estado otorgado por el funcionario encargado de la solicitud al soporte ajuntado por el estudiante ('PASS','FAIL').
	 I_DOCUMENTO  BLOB,	-- Archivos de los documentos adjuntados al soporte de la  CATEGORIA definida para la convocatoria.
	 Q_PUNTAJE  NUMBER(3) NOT NULL,	-- Sumatoria de los puntajes de la  CATEGORIA del apoyo alimentario.
	 ID_CATEGORIA  VARCHAR2(10) NOT NULL	-- Foreing key a la  CATEGORIA del apoyo alimentario.
)
;

CREATE TABLE Subsidio
(
	 K_ID  VARCHAR2(10) NOT NULL,	-- Código que identifica al subsidio
	 I_TIPO  VARCHAR2(1) NOT NULL,	-- Tipo de subsicio que se crea (Total  T , Parcial tipo  A , Parcial tipo  B , Parcial tipo  C ).
	 ID_CONVOCATORIA  VARCHAR2(10) NOT NULL	-- Código que identifica la convocatoria asociada
)
;

CREATE TABLE Tipo_Subsidio
(
	 K_ID  VARCHAR2(2) NOT NULL,	-- Código del tipo de subsidio
	 I_HORARIO  VARCHAR2(1) NOT NULL,	-- Franja horaria en que se presta el subsidio (Diurna  D , Nocturna  N )
	 Q_CUPOS  NUMBER(5) NOT NULL,	-- número de cupos habilitados para este tipo de subsicio
	 ID_SUBSIDIO  VARCHAR2(10) NOT NULL	-- código del subsidio
)
;

CREATE TABLE Tiquete
(
	 K_NUMERO  VARCHAR2(10) NOT NULL,	-- Número del tiquete
	 F_UTILIZACION  DATE NOT NULL,	-- Fecha de utilización del tiquerte
	 I_ESTADO  VARCHAR2(1) NOT NULL,	-- Estado del tiquete (utilizado  U , Vencido  V , Entregado  E ).
	 ID_TIQUETERA  VARCHAR2(10) NOT NULL	-- Tiquetera a la que pertenece este tiquete
)
;

CREATE TABLE Tiquetera
(
	 K_ID  VARCHAR2(10) NOT NULL,	-- Código de identificación de la tiquetera
	 F_ENTREGA  DATE NOT NULL,	-- Fecha en que se entrega la tiquetera
	 Q_TIQUETES  NUMBER(2) NOT NULL,	-- Cantidad de tiquetes que tiene la tiquetera
	 O_PORCENTAJE_PAGO  NUMBER(2) NOT NULL,	-- Porcentaje que debe pagar el estudiante por la tiquetera
	 ID_BENEFICIO  VARCHAR2(10) NOT NULL,	-- Codifo identificador del Beneficio al que está asociado esta tiquetera.
	 V_PRECIO  NUMBER(8) NOT NULL	-- valor de la tiquetera
)
;

-- Create Comments, Sequences and Triggers for Autonumber Columns

COMMENT ON TABLE Actividad  IS 'Actividad que debe realizar el Estudiante Beneficiado con el Apoyo Alimentario';

COMMENT ON COLUMN Actividad.K_ID  IS 'Código que identifica la Actividad';

COMMENT ON COLUMN Actividad.F_REALIZACION  IS 'Fecha en que se realiza la actividad';

COMMENT ON COLUMN Actividad.O_LUGAR  IS 'Lugar donde se realiza la actividad';

COMMENT ON COLUMN Actividad.O_DESCRIPCION  IS 'Breve descripción de la actividad a realizar';

COMMENT ON COLUMN Actividad.ID_FUNCIONARIO  IS 'Código del Funcionario que controla la Actividad';

COMMENT ON TABLE Beneficio  IS 'Subsidio entregado a un estudiante';

COMMENT ON COLUMN Beneficio.K_ID  IS 'Código identificador del beneficio entregado';

COMMENT ON COLUMN Beneficio.I_ESTADO  IS 'Estado actual del beneficio (Entregado  E , Retidado  R , Cancelado  C ).';

COMMENT ON COLUMN Beneficio.O_OBSERVACION  IS 'Observación referente al estado del beneficio';

COMMENT ON COLUMN Beneficio.ID_TIPO_SUBSIDIO  IS 'Código que identifica al subsidio asociado';

COMMENT ON COLUMN Beneficio.ID_SOLICITUD  IS 'Código que identifica la solicitud asociada al beneficio';

COMMENT ON TABLE Beneficio_Actividad  IS 'Tabla de relación entre el Beneficio y la Actividad';

COMMENT ON COLUMN Beneficio_Actividad.ID_BENEFICIO  IS 'Código que identifica al beneficio';

COMMENT ON COLUMN Beneficio_Actividad.ID_ACTIVIDAD  IS 'Código qque identifica la Actividad a realizar';

COMMENT ON TABLE Categoria  IS 'Tabla para las  CATEGORIAs definidas por la convocatoria del apoyo alimentario.';

COMMENT ON COLUMN Categoria.O_DESCRIPCION  IS 'Descripcion de la  CATEGORIA (Nombre de la  CATEGORIA) definida por la convocatoria para el apoyo alimentario';

COMMENT ON COLUMN Categoria.ID_CONVOCATORIA  IS 'Foreing key de la convocatoria';

COMMENT ON TABLE Condicion  IS 'Tabla para las condiciones (entidad débil) que hacen parte de una  CATEGORIA en particular.';

COMMENT ON COLUMN Condicion.K_CONSECUTIVO  IS 'Número consecutivo para una condición de la categoria.';

COMMENT ON COLUMN Condicion.K_ID_CATEGORIA  IS 'Id de la  CATEGORIA como parte de la llave primaria.';

COMMENT ON COLUMN Condicion.O_DESCRIPCION  IS 'descripción de la condición actual';

COMMENT ON COLUMN Condicion.Q_PUNTAJE  IS 'Puntaje asignado para la condición (Q_PUNTAJE >0 and Q_PUNTAJE <=100)';

COMMENT ON COLUMN Convocatoria.K_ID_CONVOCATORIA  IS 'Id de la convocatoria';

COMMENT ON COLUMN Convocatoria.F_INICIO  IS 'Fecha de apertura para la recepción de solicitudes al apoyo alimentario';

COMMENT ON COLUMN Convocatoria.F_RECEPCION_SOL  IS 'Fecha final para la recepción de solicitudes';

COMMENT ON COLUMN Convocatoria.F_EVALUACION_SOL  IS 'Fecha de inicio para la evaluación de las solicitudes recibidas';

COMMENT ON COLUMN Convocatoria.F_CIERRE  IS 'Fecha de cierre de la convocatoria para el apoyo alimentario';

COMMENT ON COLUMN Convocatoria.I_ESTADO  IS 'Estado actual de la convocatoria (''R'',''E'',''F'')';

COMMENT ON COLUMN Convocatoria.Q_PERIODO  IS 'Periodo de la convocatoria (1,3)';

COMMENT ON COLUMN Convocatoria.Q_ANIO  IS 'Año de la convocatoria (anio>0 and anio<sysdate)';

COMMENT ON TABLE Coordinador  IS 'Tabla para los coordinadores de las convocatorias del apoyo alimentario.';

COMMENT ON COLUMN Coordinador.K_TIPO_ID  IS 'Tipo de cocumento (''CC'',''CE'',''PS'')';

COMMENT ON COLUMN Coordinador.K_ID  IS 'Identificación del coordinador a cargo';

COMMENT ON COLUMN Coordinador.N_NOMBRES  IS 'Primer y segundo nombre del coordinador';

COMMENT ON COLUMN Coordinador.N_APELLIDOS  IS 'Primer y segundo apellido del coordinador';

COMMENT ON COLUMN Coordinador.N_CARGO  IS 'Cargo del funcionario que ejerce como coordinador';

COMMENT ON TABLE Coordinador_Convocatoria  IS 'Tabla de rompimiento entre la tabla Coordinador y la tabla Convocatoria.';

COMMENT ON COLUMN Coordinador_Convocatoria.K_TIPO_ID_COORDINADOR  IS 'Tipo id del coordinador asociado';

COMMENT ON COLUMN Coordinador_Convocatoria.K_ID_COORDINADOR  IS 'Id coordinador asociado';

COMMENT ON COLUMN Coordinador_Convocatoria.K_ID_CONVOCATORIA  IS 'Id de la convocatoria para el apoyo alimentario';

COMMENT ON TABLE Estudiante  IS 'Tabla para los estudiantes que realizan solicitudes a la conovocatoria del apoyo alimentario.';

COMMENT ON TABLE Funcionario  IS 'Funcionario del área de Bienestar Institucional ';

COMMENT ON COLUMN Funcionario.K_ID  IS 'Código que identifica al funcionario de Bienestar Institucional';

COMMENT ON COLUMN Funcionario.N_NOMBRE  IS 'Nombres del Funcionario';

COMMENT ON COLUMN Funcionario.N_APELLIDO  IS 'Apellidos del Funcionario';

COMMENT ON COLUMN Funcionario.N_CARGO  IS 'Cargo que ejerce el Funcionario';

COMMENT ON TABLE Funcionario_Solicitud  IS 'Tabla que relaciona funcionario y solicitud';

COMMENT ON COLUMN Funcionario_Solicitud.ID_FUNCIONARIO  IS 'Código del funcionario que gestiona la solicitud';

COMMENT ON COLUMN Funcionario_Solicitud.ID_SOLICITUD  IS 'Código de la solicitud';

COMMENT ON COLUMN Funcionario_Solicitud.F_ACTUALIZACION  IS 'Fecha en que se actualiza la solicitud';

COMMENT ON COLUMN Funcionario_Solicitud.O_OBSERVACION  IS 'Breve desctipción por el cual se actualiza la solicitud';

COMMENT ON TABLE Pago  IS 'Registro de Pago de las tiqueteras';

COMMENT ON COLUMN Pago.K_ID  IS 'Código del pago';

COMMENT ON COLUMN Pago.F_PAGO  IS 'Fecha en que se hace el pago';

COMMENT ON COLUMN Pago.V_PAGO  IS 'valor que se paga';

COMMENT ON COLUMN Pago.ID_TIQUETERA  IS 'código de la tiquetera';

COMMENT ON TABLE Solicitud  IS 'Proceso que hace el estudiante para postularse al Beneficio del Apoyo Alimentario';

COMMENT ON COLUMN Solicitud.K_ID  IS 'Código que identifica a la Solicitud';

COMMENT ON COLUMN Solicitud.F_REALIZACION  IS 'Fecha en que se realiza la Solicitud';

COMMENT ON COLUMN Solicitud.I_ESTADO  IS 'Estado actual de la solicitud (Enviada  E , Rechazada  R ).';

COMMENT ON COLUMN Solicitud.O_OBSERVACION  IS 'Breve descripción del estado actual de la solicitud';

COMMENT ON COLUMN Solicitud.ID_CONVOCATORIA  IS 'Código de la convocatoria asociada';

COMMENT ON COLUMN Solicitud.Q_PUNTAJE  IS 'Puntaje total asignado a la solicitud';

COMMENT ON TABLE Solicitud_Soporte  IS 'Tabla de relación entre la Solicitud y el Soporte';

COMMENT ON COLUMN Solicitud_Soporte.ID_SOLICITUD  IS 'código de la solicitud';

COMMENT ON COLUMN Solicitud_Soporte.ID_SOPORTE  IS 'código del soporte';

COMMENT ON TABLE Soporte  IS 'Tabla para los soporte de las  CATEGORIAs definidas para el apoyo alimentario.';

COMMENT ON COLUMN Soporte.K_ID  IS 'código de identificación del soporte';

COMMENT ON COLUMN Soporte.O_DESCRIPCION  IS 'Descripción del estado (razones) del soporte de la  CATEGORIA definida para el apoyo alimentario.';

COMMENT ON COLUMN Soporte.I_TIPO  IS 'Tipo de la extensión del documento que se adjunta para la  CATEGORIA del apoyo alimentario.';

COMMENT ON COLUMN Soporte.I_ESTADO  IS 'Estado otorgado por el funcionario encargado de la solicitud al soporte ajuntado por el estudiante (''PASS'',''FAIL'').';

COMMENT ON COLUMN Soporte.I_DOCUMENTO  IS 'Archivos de los documentos adjuntados al soporte de la  CATEGORIA definida para la convocatoria.';

COMMENT ON COLUMN Soporte.Q_PUNTAJE  IS 'Sumatoria de los puntajes de la  CATEGORIA del apoyo alimentario.';

COMMENT ON COLUMN Soporte.ID_CATEGORIA  IS 'Foreing key a la  CATEGORIA del apoyo alimentario.';

COMMENT ON TABLE Subsidio  IS 'Subsidio que se crea en cada convocatoria';

COMMENT ON COLUMN Subsidio.K_ID  IS 'Código que identifica al subsidio';

COMMENT ON COLUMN Subsidio.I_TIPO  IS 'Tipo de subsicio que se crea (Total  T , Parcial tipo  A , Parcial tipo  B , Parcial tipo  C ).';

COMMENT ON COLUMN Subsidio.ID_CONVOCATORIA  IS 'Código que identifica la convocatoria asociada';

COMMENT ON TABLE Tipo_Subsidio  IS 'Franja horaria en que se presta el subsidio de apoyo alimentario';

COMMENT ON COLUMN Tipo_Subsidio.K_ID  IS 'Código del tipo de subsidio ';

COMMENT ON COLUMN Tipo_Subsidio.I_HORARIO  IS 'Franja horaria en que se presta el subsidio (Diurna  D , Nocturna  N )';

COMMENT ON COLUMN Tipo_Subsidio.Q_CUPOS  IS 'número de cupos habilitados para este tipo de subsicio';

COMMENT ON COLUMN Tipo_Subsidio.ID_SUBSIDIO  IS 'código del subsidio';

COMMENT ON TABLE Tiquete  IS 'Volante para reclamar el almuerzo diurno o cena nocturna';

COMMENT ON COLUMN Tiquete.K_NUMERO  IS 'Número del tiquete';

COMMENT ON COLUMN Tiquete.F_UTILIZACION  IS 'Fecha de utilización del tiquerte';

COMMENT ON COLUMN Tiquete.I_ESTADO  IS 'Estado del tiquete (utilizado  U , Vencido  V , Entregado  E ).';

COMMENT ON COLUMN Tiquete.ID_TIQUETERA  IS 'Tiquetera a la que pertenece este tiquete';

COMMENT ON TABLE Tiquetera  IS 'Cuadernillo de tiquetes asociados a un apoyp entregado';

COMMENT ON COLUMN Tiquetera.K_ID  IS 'Código de identificación de la tiquetera';

COMMENT ON COLUMN Tiquetera.F_ENTREGA  IS 'Fecha en que se entrega la tiquetera';

COMMENT ON COLUMN Tiquetera.Q_TIQUETES  IS 'Cantidad de tiquetes que tiene la tiquetera';

COMMENT ON COLUMN Tiquetera.O_PORCENTAJE_PAGO  IS 'Porcentaje que debe pagar el estudiante por la tiquetera';

COMMENT ON COLUMN Tiquetera.ID_BENEFICIO  IS 'Codifo identificador del Beneficio al que está asociado esta tiquetera.';

COMMENT ON COLUMN Tiquetera.V_PRECIO  IS 'valor de la tiquetera';


-- Create Primary Keys, Indexes, Uniques, Checks, Triggers

ALTER TABLE Actividad
 ADD CONSTRAINT  PK_ACTIVIDAD
	PRIMARY KEY ( K_ID )
 USING INDEX
;

CREATE INDEX  IXFK_Actividad_Funcionario
 ON Actividad  ( ID_FUNCIONARIO )
;

ALTER TABLE Beneficio
 ADD CONSTRAINT  PK_BENEFICIO
	PRIMARY KEY ( K_ID )
 USING INDEX
;

ALTER TABLE Beneficio
 ADD CONSTRAINT  CHK_ESTADO_BENEFICIO  CHECK (i_estado in ('E','R','C'))
;

CREATE INDEX  IXFK_Beneficio_Tipo_Subsidio
 ON Beneficio  ( ID_TIPO_SUBSIDIO )
;

CREATE INDEX  IXFK_Beneficio_Acti_Activ01
 ON Beneficio_Actividad  ( ID_ACTIVIDAD )
;

CREATE INDEX  IXFK_Beneficio_Acti_Benef01
 ON Beneficio_Actividad  ( ID_BENEFICIO )
;

ALTER TABLE Categoria
 ADD CONSTRAINT  PK_CATEGORIA
	PRIMARY KEY ( K_ID )
 USING INDEX
;

CREATE INDEX  IXFK_Categoria_Convocatoria
 ON Categoria  ( ID_CONVOCATORIA )
;

ALTER TABLE Condicion
 ADD CONSTRAINT  PK_CONDICION
	PRIMARY KEY ( K_CONSECUTIVO , K_ID_CATEGORIA )
 USING INDEX
;

ALTER TABLE Condicion
 ADD CONSTRAINT  CHK_PUNTAJE_CONDICION  CHECK(Q_PUNTAJE >= 0 and Q_PUNTAJE <= 100)
;

CREATE INDEX  IXFK_Condicion_Categoria
 ON Condicion  ( K_ID_CATEGORIA )
;

ALTER TABLE Convocatoria
 ADD CONSTRAINT  PK_Convocatoria
	PRIMARY KEY ( K_ID_CONVOCATORIA )
 USING INDEX
;

ALTER TABLE Convocatoria
 ADD CONSTRAINT  CHK_ESTADO_CONVOCATORIA  CHECK (i_estado in ('R','E','F'))
;

ALTER TABLE Convocatoria
 ADD CONSTRAINT  chk_anio  CHECK (q_anio > 0)
;

ALTER TABLE Convocatoria
 ADD CONSTRAINT  chk_periodo_convocatoria  CHECK (q_periodo in (1,3))
;

ALTER TABLE Coordinador
 ADD CONSTRAINT  PK_Coordinador
	PRIMARY KEY ( K_TIPO_ID , K_ID )
 USING INDEX
;

ALTER TABLE Coordinador
 ADD CONSTRAINT  CHK_TIPO_ID  CHECK (K_TIPO_ID IN ('CC','CE','PS'))
;

ALTER TABLE Coordinador_Convocatoria
 ADD CONSTRAINT  PK_Coordinador_Convocatoria
	PRIMARY KEY ( K_TIPO_ID_COORDINADOR , K_ID_COORDINADOR , K_ID_CONVOCATORIA )
 USING INDEX
;

ALTER TABLE Estudiante
 ADD CONSTRAINT  PK_Estudiante
	PRIMARY KEY ( K_CODIGO )
 USING INDEX
;

ALTER TABLE Estudiante
 ADD CONSTRAINT  CHK_PERIODO_ESTUDIANTE  CHECK (I_PERIODO_ACT in (1,3))
;

ALTER TABLE Estudiante
 ADD CONSTRAINT  CHK_CREDITOS  CHECK (Q_CREDITOS_INS > 0 and Q_CREDITOS_INS < 21)
;

ALTER TABLE Estudiante
 ADD CONSTRAINT  CHK_RENOVACIONES  CHECK (Q_RENOVACIONES > 0 and Q_RENOVACIONES < 18)
;

ALTER TABLE Funcionario
 ADD CONSTRAINT  PK_FUNCIONARIO
	PRIMARY KEY ( K_ID )
 USING INDEX
;

CREATE INDEX  IXFK_Funcionario__Funcion01
 ON Funcionario_Solicitud  ( ID_FUNCIONARIO )
;

CREATE INDEX  IXFK_Funcionario_So_Solic01
 ON Funcionario_Solicitud  ( ID_SOLICITUD )
;

ALTER TABLE Pago
 ADD CONSTRAINT  PK_PAGO
	PRIMARY KEY ( K_ID )
 USING INDEX
;

ALTER TABLE Pago
 ADD CONSTRAINT  CHK_V_PAGO  CHECK (v_pago >= 0)
;

CREATE INDEX  IXFK_Pago_Tiquetera
 ON Pago  ( ID_TIQUETERA )
;

ALTER TABLE Solicitud
 ADD CONSTRAINT  PK_SOLICITUD
	PRIMARY KEY ( K_ID )
 USING INDEX
;

CREATE INDEX  IXFK_Solicitud_Convocatoria
 ON Solicitud  ( ID_CONVOCATORIA )
;

CREATE INDEX  IXFK_Solicitud_Estudiante
 ON Solicitud  ( K_ID_ESTUDIANTE )
;

CREATE INDEX  IXFK_Solicitud_Soporte_So01
 ON Solicitud_Soporte  ( ID_SOLICITUD )
;

CREATE INDEX  IXFK_Solicitud_Soporte_Soporte
 ON Solicitud_Soporte  ( ID_SOPORTE )
;

ALTER TABLE Soporte
 ADD CONSTRAINT  PK_SOPORTE
	PRIMARY KEY ( K_ID )
 USING INDEX
;

ALTER TABLE Soporte
 ADD CONSTRAINT  ESTADO  CHECK (I_ESTADO in ('PASS', 'FAIL'))
;

ALTER TABLE Soporte
 ADD CONSTRAINT  CHK_PUNTAJE_SOPORTE  CHECK (Q_PUNTAJE>0)--trigger para validar maximo puntaje
;

CREATE INDEX  IXFK_Soporte_Categoria
 ON Soporte  ( ID_CATEGORIA )
;

ALTER TABLE Subsidio
 ADD CONSTRAINT  PK_SUBSIDIO
	PRIMARY KEY ( K_ID )
 USING INDEX
;

ALTER TABLE Subsidio
 ADD CONSTRAINT  CHK_TIPO  CHECK (i_tipo in ('T','A','B','C'))
;

ALTER TABLE Tipo_Subsidio
 ADD CONSTRAINT  PK_Tipo_Subsidio
	PRIMARY KEY ( K_ID )
 USING INDEX
;

ALTER TABLE Tipo_Subsidio
 ADD CONSTRAINT  CHK_HORARIO  CHECK (i_horario in( 'D','N'))
;

CREATE INDEX  IXFK_Tipo_Subsidio_Subsidio
 ON Tipo_Subsidio  ( ID_SUBSIDIO )
;

ALTER TABLE Tiquete
 ADD CONSTRAINT  PK_Tiquete
	PRIMARY KEY ( K_NUMERO )
 USING INDEX
;

ALTER TABLE Tiquete
 ADD CONSTRAINT  CHK_ESTADO_TIQUETE  CHECK (i_estado in ('E','U','V'))
;

CREATE INDEX  IXFK_Tiquete_Tiquetera
 ON Tiquete  ( ID_TIQUETERA )
;

ALTER TABLE Tiquetera
 ADD CONSTRAINT  PK_TIQUETERA
	PRIMARY KEY ( K_ID )
 USING INDEX
;

ALTER TABLE Tiquetera
 ADD CONSTRAINT  CHK_PORCENTAJE  CHECK (o_porcentaje_pago >=0 and o_porcentaje_pago <= 100)
;

ALTER TABLE Tiquetera
 ADD CONSTRAINT  CHK_PRECIO  CHECK (v_precio >=0)
;

CREATE INDEX  IXFK_Tiquetera_Beneficio
 ON Tiquetera  ( ID_BENEFICIO )
;

-- Create Foreign Key Constraints

ALTER TABLE Actividad
 ADD CONSTRAINT  FK_Actividad_Funcionario
	FOREIGN KEY ( ID_FUNCIONARIO ) REFERENCES Funcionario  ( K_ID )
	ON DELETE CASCADE
;

ALTER TABLE Beneficio
 ADD CONSTRAINT  FK_Beneficio_Tipo_Subsidio
	FOREIGN KEY ( ID_TIPO_SUBSIDIO ) REFERENCES  Tipo_Subsidio  ( K_ID )
	ON DELETE CASCADE
;

ALTER TABLE BENEFICIO
 ADD CONSTRAINT FK_SOLICITUD
  FOREIGN KEY (ID_SOLICITUD) REFERENCES SOLICITUD ( K_ID )
	ON DELETE CASCADE
;

ALTER TABLE Beneficio_Actividad
 ADD CONSTRAINT  FK_Beneficio_Acti_Actividad_01
	FOREIGN KEY ( ID_ACTIVIDAD ) REFERENCES Actividad  ( K_ID )
	ON DELETE CASCADE
;

ALTER TABLE Beneficio_Actividad
 ADD CONSTRAINT  FK_Beneficio_Acti_Beneficio_01
	FOREIGN KEY ( ID_BENEFICIO ) REFERENCES Beneficio  ( K_ID )
	ON DELETE CASCADE
;

ALTER TABLE Categoria
 ADD CONSTRAINT  FK_Categoria_Convocatoria
	FOREIGN KEY ( ID_CONVOCATORIA ) REFERENCES Convocatoria  ( K_ID_CONVOCATORIA )
	ON DELETE CASCADE
;

ALTER TABLE Condicion
 ADD CONSTRAINT  FK_Condicion_Categoria
	FOREIGN KEY ( K_ID_CATEGORIA ) REFERENCES Categoria  ( K_ID )
	ON DELETE CASCADE
;

ALTER TABLE Coordinador_Convocatoria
 ADD CONSTRAINT  FK_Coo_Con_Convocatoria
	FOREIGN KEY ( K_ID_CONVOCATORIA ) REFERENCES Convocatoria  ( K_ID_CONVOCATORIA )
	ON DELETE CASCADE
;

ALTER TABLE Coordinador_Convocatoria
 ADD CONSTRAINT  FK_Coo_Con_Coordinador
	FOREIGN KEY ( K_TIPO_ID_COORDINADOR , K_ID_COORDINADOR ) REFERENCES Coordinador  ( K_TIPO_ID , K_ID )
	ON DELETE CASCADE
;

ALTER TABLE Funcionario_Solicitud
 ADD CONSTRAINT  FK_Funcionario__Funcionario_01
	FOREIGN KEY ( ID_FUNCIONARIO ) REFERENCES Funcionario  ( K_ID )
	ON DELETE CASCADE
;

ALTER TABLE Funcionario_Solicitud
 ADD CONSTRAINT  FK_Funcionario_So_Solicitud_01
	FOREIGN KEY ( ID_SOLICITUD ) REFERENCES Solicitud  ( K_ID )
	ON DELETE CASCADE
;

ALTER TABLE Pago
 ADD CONSTRAINT  FK_Pago_Tiquetera
	FOREIGN KEY ( ID_TIQUETERA ) REFERENCES  Tiquetera  ( K_ID )
	ON DELETE CASCADE
;

ALTER TABLE Solicitud
 ADD CONSTRAINT  FK_Solicitud_Convocatoria
	FOREIGN KEY ( ID_CONVOCATORIA ) REFERENCES Convocatoria  ( K_ID_CONVOCATORIA )
	ON DELETE CASCADE
;

ALTER TABLE Solicitud
 ADD CONSTRAINT  FK_Solicitud_Estudiante
	FOREIGN KEY ( K_ID_ESTUDIANTE ) REFERENCES Estudiante  ( K_CODIGO )
	ON DELETE CASCADE
;

ALTER TABLE Solicitud_Soporte
 ADD CONSTRAINT  FK_Solicitud_Soporte_Solicitud
	FOREIGN KEY ( ID_SOLICITUD ) REFERENCES Solicitud  ( K_ID )
	ON DELETE CASCADE
;

ALTER TABLE Solicitud_Soporte
 ADD CONSTRAINT  FK_Solicitud_Soporte_Soporte
	FOREIGN KEY ( ID_SOPORTE ) REFERENCES Soporte  ( K_ID )
	ON DELETE CASCADE
;

ALTER TABLE Soporte
 ADD CONSTRAINT  FK_Soporte_Categoria
	FOREIGN KEY ( ID_CATEGORIA ) REFERENCES Categoria  ( K_ID )
	ON DELETE CASCADE
;

ALTER TABLE Subsidio
 ADD CONSTRAINT  FK_SUBSIDIO_CONVOCATORIA
	FOREIGN KEY ( ID_CONVOCATORIA ) REFERENCES Convocatoria  (K_ID_CONVOCATORIA )
	ON DELETE CASCADE
;

ALTER TABLE Tipo_Subsidio
 ADD CONSTRAINT  FK_Tipo_Subsidio_Subsidio
	FOREIGN KEY ( ID_SUBSIDIO ) REFERENCES Subsidio  ( K_ID )
	ON DELETE CASCADE
;

ALTER TABLE Tiquete
 ADD CONSTRAINT  FK_Tiquete_Tiquetera
	FOREIGN KEY ( ID_TIQUETERA ) REFERENCES Tiquetera  ( K_ID )
	ON DELETE CASCADE
;

ALTER TABLE Tiquetera
 ADD CONSTRAINT  FK_Tiquetera_Beneficio
	FOREIGN KEY ( ID_BENEFICIO ) REFERENCES  Beneficio  ( K_ID )
	ON DELETE CASCADE
;


--grant privileges

GRANT CONNECT TO R_CONSULTA;
GRANT CONNECT TO R_ESTUDIANTE;
GRANT CONNECT TO R_COORDINADOR;
GRANT CONNECT TO R_FUNCIONARIO;
GRANT CONNECT TO R_BENEFICIARIO;
GRANT CONNECT TO R_APP;
GRANT CONNECT,RESOURCE TO R_ADMIN;


grant select on CONVOCATORIA to R_CONSULTA;
grant select on SUBSIDIO to R_CONSULTA;
grant select on TIPO_SUBSIDIO to R_CONSULTA;
grant select on ESTUDIANTE to R_CONSULTA;
grant select on SOLICITUD to R_CONSULTA;


GRANT SELECT ON ESTUDIANTE TO R_ESTUDIANTE;
GRANT SELECT, INSERT ON SOLICITUD TO R_ESTUDIANTE;
GRANT SELECT ON CONVOCATORIA TO R_ESTUDIANTE;
GRANT SELECT, INSERT ON Solicitud_Soporte TO R_ESTUDIANTE;
GRANT SELECT, INSERT ON SOPORTE TO R_ESTUDIANTE;


GRANT INSERT, UPDATE, SELECT ON CONVOCATORIA TO R_COORDINADOR;
GRANT INSERT, UPDATE, SELECT ON COORDINADOR_CONVOCATORIA TO R_COORDINADOR;
GRANT INSERT, UPDATE, SELECT ON CATEGORIA TO R_COORDINADOR;
GRANT INSERT, UPDATE, SELECT ON CONDICION TO R_COORDINADOR;


GRANT SELECT, UPDATE ON SOLICITUD TO R_FUNCIONARIO;
GRANT SELECT ON SOLICITUD_SOPORTE TO R_FUNCIONARIO;
GRANT SELECT ON CATEGORIA TO R_FUNCIONARIO;
GRANT SELECT, UPDATE ON SOPORTE TO R_FUNCIONARIO;
GRANT SELECT ON CONDICION TO R_FUNCIONARIO;
GRANT SELECT ON CONVOCATORIA TO R_FUNCIONARIO;
GRANT SELECT ON SUBSIDIO TO R_FUNCIONARIO;
GRANT SELECT ON TIPO_SUBSIDIO TO R_FUNCIONARIO;
GRANT SELECT, UPDATE ON BENEFICIO TO R_FUNCIONARIO;
GRANT SELECT, UPDATE, INSERT ON BENEFICIO_ACTIVIDAD TO R_FUNCIONARIO;
GRANT SELECT, UPDATE, INSERT ON ACTIVIDAD TO R_FUNCIONARIO;
GRANT SELECT ON FUNCIONARIO_SOLICITUD TO R_FUNCIONARIO;


GRANT SELECT ON SOLICITUD TO R_BENEFICIARIO;
GRANT SELECT ON CONVOCATORIA TO R_BENEFICIARIO;
GRANT SELECT ON SUBSIDIO TO R_BENEFICIARIO;
GRANT SELECT ON TIPO_SUBSIDIO TO R_BENEFICIARIO;
GRANT SELECT ON BENEFICIO TO R_BENEFICIARIO;
GRANT SELECT ON BENEFICIO_ACTIVIDAD TO R_BENEFICIARIO;
GRANT SELECT ON ACTIVIDAD TO R_BENEFICIARIO;
GRANT SELECT ON TIQUETERA TO R_BENEFICIARIO;
GRANT SELECT ON PAGO TO R_BENEFICIARIO;
GRANT SELECT ON TIQUETE TO R_BENEFICIARIO;


GRANT SELECT ON SOLICITUD TO R_APP;
GRANT SELECT ON SOLICITUD_SOPORTE TO R_APP;
GRANT SELECT, UPDATE ON SOPORTE TO R_APP;
GRANT SELECT ON CATEGORIA TO R_APP;
GRANT SELECT ON CONDICION TO R_APP;
GRANT SELECT ON CONVOCATORIA TO R_APP;
GRANT SELECT ON SUBSIDIO TO R_APP;
GRANT SELECT ON TIPO_SUBSIDIO TO R_APP;
GRANT SELECT, UPDATE, INSERT ON BENEFICIO TO R_APP;
GRANT SELECT ON BENEFICIO_ACTIVIDAD TO R_APP;
GRANT SELECT ON ACTIVIDAD TO R_APP;
GRANT SELECT, UPDATE, INSERT ON FUNCIONARIO_SOLICITUD TO R_APP;
GRANT UPDATE, INSERT ON TIQUETERA TO R_APP;
GRANT UPDATE, INSERT ON TIQUETE TO R_APP;
GRANT UPDATE, INSERT ON PAGO TO R_APP;


GRANT SELECT, UPDATE, INSERT ON COORDINADOR TO R_ADMIN;
GRANT SELECT, UPDATE, INSERT ON COORDINADOR_CONVOCATORIA TO R_ADMIN;
GRANT SELECT, UPDATE, INSERT ON FUNCIONARIO TO R_ADMIN;
GRANT SELECT, UPDATE, INSERT ON FUNCIONARIO_SOLICITUD TO R_ADMIN;
GRANT SELECT, UPDATE ON ESTUDIANTE TO R_ADMIN;
